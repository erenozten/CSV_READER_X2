@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Data;
@using CSV_Reader.Models;

@model CSV_Reader.Models.HotelViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>
<br />

<meta name="viewport" content="width=device-width" />
<title>Index2</title>
<form asp-controller="Home" asp-action="PostFile" method="post" enctype="multipart/form-data">
    <input type="file" name="postedFile" />
    <input type="submit" class="btn btn-success" value="Import" />

    @{
        var numList = Enum.GetValues(typeof(HotelViewModel.SortGroupRadioButton2));
        <br />
        <br />
        @foreach (object radiotext in numList)
        {
            @Html.RadioButtonFor(h => h.SelectedAnswer, radiotext.ToString())
            @radiotext.ToString()
            <br />
        }
    }
</form>

<br />
<input type="submit" value="Clear Database" class="btn btn-warning" onclick="location.href='@Url.Action("DeleteAllData", "Home")'" />
<br />
<br />

@if (TempData["ImportFileError"] != null)
{
    <span style="color: red">
        @TempData["ImportFileError"]
    </span>
    <br />
}

<span style="color: green">
    @TempData["ClearDbMessage"]
</span>


    <br />

    @if (Model.Hotels != null && Model.Hotels.Count != 0)
    {
      @*  <p>
            Data shown in following table <span style="font-weight: bold;">has both valid and invalid data</span>. But data exported as JSON, HTML, XML and YAML files <span style="font-weight: bold;">do not include invalid data as specified in "Requirements" file.</span>. If there are no any valid data in selected file, no file will be exported!
        </p>*@

        <p>
            Data uploaded from selected CSV file has:
        </p>

        <p>
            <span style="color: green;">@Model.ValidHotelNameCount valid hotel names, </span><span style="color: red;">@Model.InvalidHotelNameCount invalid hotel names.</span>
        </p>

        <p>
            <span style="color: green;">@Model.ValidUriCount valid URI's, </span><span style="color: red;">@Model.InvalidUriCount invalid URI's.</span>
        </p>

        <p>
            <span style="color: green;">@Model.ValidStarsCount valid stars, </span><span style="color: red;">@Model.InvalidStarsCount invalid stars.</span>
        </p>

        <p style="font-size: 25px; font-weight: bold;">
            Total:<span style="color: green;"> @Model.ValidRowsCount valid, </span><span style="color: red;">@Model.InvalidRowsCount invalid rows.</span> (Invalid rows are excluded from the table)
        </p>

        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.Stars)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.Contact)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.Phone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.Uri)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.HasValidHotelName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.HasValidUri)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.HasValidStars)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Hotels)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Stars)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Contact)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Phone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Uri)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HasValidHotelName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HasValidUri)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HasValidStars)
                        </td>
                    </tr>
                }
            </tbody>
        </table>


    }

    @* @if (TempData["hotelsRawHTML"] != null)
        {
        <br />
        <span style="color: green">Show table rendered from Raw HTML output</span>
        <br />
        <br />
        @Html.Raw(@TempData["hotelsRawHTML"])
        ;
        }*@




